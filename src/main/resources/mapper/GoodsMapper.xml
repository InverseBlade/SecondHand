<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.zzw.secondhand.dao.GoodsDao">

    <insert id="insertAndGetId" parameterType="Goods" keyProperty="id">
        INSERT INTO second_goods(`name`, `desc`, submit_time, buy_time, quantity,
                                 price, origin_price, buyer_id, seller_id, `status`,
                                 `read`, thumbs, area, category_id)
        VALUES (#{name}, #{desc}, #{submitTime}, #{buyTime, jdbcType=TIMESTAMP}, #{quantity},
                #{price}, #{originPrice}, #{buyerId}, #{sellerId}, #{status},
                #{read}, #{thumbs}, #{area}, #{categoryId})
    </insert>

    <delete id="deleteById" parameterType="Integer">
        DELETE
        FROM second_goods
        WHERE id = #{id}
    </delete>

    <select id="selectById" parameterType="Integer" resultType="Goods">
        SELECT *
        FROM second_goods
        WHERE id = #{id}
    </select>

    <update id="updateSelectiveById" parameterType="Goods">
        UPDATE second_goods
        <set>
            <if test="name != null">
                `name`=#{name},
            </if>
            <if test="desc != null">
                `desc` =#{desc},
            </if>
            <if test="submitTime != null">
                submit_time=#{submitTime},
            </if>
            <if test="buyTime != null">
                buy_time=#{buyTime},
            </if>
            <if test="quantity != null">
                quantity=#{quantity},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="originPrice != null">
                origin_price=#{originPrice},
            </if>
            <if test="buyerId != null">
                buyer_id=#{buyerId},
            </if>
            <if test="sellerId != null">
                seller_id=#{sellerId},
            </if>
            <if test="status != null">
                `status`=#{status},
            </if>
            <if test="read != null">
                `read`=#{read},
            </if>
            <if test="thumbs != null">
                thumbs=#{thumbs},
            </if>
            <if test="area != null">
                area = #{area},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <update id="increaseRead" parameterType="Integer">
        UPDATE second_goods
        SET `read` = `read` + 1
        WHERE id = #{id}
    </update>

    <select id="listGoods" resultType="com.zzw.secondhand.dto.GoodsListDTO">
        SELECT  g.id,
                g.`name`,
                `desc`,
                submit_time,
                quantity,
                price,
                origin_price,
                seller_id,
                `read`,
                thumbs,
                g.area,
                category_id,
                u.nick_name,
                c.name AS 'category'
        FROM second_goods AS g
        INNER JOIN second_user u ON u.id = g.seller_id
        INNER JOIN second_category c ON g.category_id = c.id
        <where>
            <if test="filter.keyWord != null">
                AND (g.`name` LIKE CONCAT('%',#{filter.keyWord},'%')
                OR g.`desc` LIKE CONCAT('%',#{filter.keyWord},'%'))
            </if>
            <if test="filter.categoryId != null">
                AND g.category_id = #{filter.categoryId}
            </if>
            <if test="filter.area != null">
                AND g.area = #{filter.area}
            </if>
            <if test="filter.sellerId != null">
                AND g.seller_id = #{filter.sellerId}
            </if>
            <if test="filter.buyerId != null">
                AND g.buyer_id = #{filter.buyerId}
            </if>
            <if test="filter.status != null">
                AND g.status = #{filter.status}
            </if>
        </where>
        LIMIT #{offset},#{limit}
    </select>

</mapper>
